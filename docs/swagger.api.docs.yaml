---
openapi: 3.0.3
info:
  title: HangoutYuk API - OpenAPI 3.0
  description: |-
    Dokumentasi lengkap API dari aplikasi HangoutYuk!
    - Pilih server backend sesuai kebutuhan
    - Login dahulu untuk mendapatkan auth token JWT
    - Salin token dari response yang didapat, masukan pada menu Authorize
    - Endpoint sudah dapat diakses
    Khusus untuk Recommender API ubah server manjadi  ML Recommender Endpoint
  license:
    name: MIT
    url: https://mit-license.org/
  version: 1.0.0
externalDocs:
  description: HangoutYuk Github
  url: https://github.com/HangoutYuk
servers:
- url: https://hayuk-project.et.r.appspot.com/v1
  description: Main Backend
- url: https://dev-dot-hayuk-project.et.r.appspot.com/v1
  description: Dev Backend
- url: http://localhost:8080/v1
  description: Local Backend
- url: https://hayuk-recommender-api-dae6gnqlya-et.a.run.app/
  description: ML Recommender Endpoint
tags:
- name: Autentikasi
  description: Endpoint untuk Autentikasi (Login & Register)
- name: Manajemen Pengguna
  description: Endpoint untuk manajemen pengguna
- name: Data Tempat
  description: Endpoint untuk mendapatkan data rekomendasi tempat dari ML Endpoint
    dan data detail dari suatu tempat
- name: Poll Website
  description: Endpoint untuk membuat website polling dari tempat yang diinginkan
- name: Recommender Endpoint
  description: Endpoint untuk mengetes ML Recommender API
paths:
  /register:
   post:
     tags:
       - Autentikasi
     summary: Buat dan daftar akun baru
     requestBody:
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/register'
     responses:
       '201':
         description: Created
         content:
           application/json:
             example:
               {
                 "status": "success",
                 "message":'Data pengguna baru berhasil ditambahkan',
                 "data": {
                   "id": "qyO9_BgMqNpb45Y3g1S-o",
                   "name": "Ahmad Ibrahim",
                   "email": "a.ibrahim@example.com",
                   "createdAt": "2023-03-17T11:04:09.588Z",
                   "updatedAt": "2023-03-17T11:04:09.588Z"
                 }
               }
       '400':
         description: Bad Request
       '409':
         description: Conflict
         content:
           application/json:
             examples:
               emailExist:
                 value:
                   {
                     message: "Email sudah dipakai!"
                   }
  /login:
   post:
    tags:
      - Autentikasi
    summary: Login akun yang telah terdaftar
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/login'
    responses:
      '201':
        description: Created
        content:
          application/json:
            example:
              {
                "status": "success",
                "message":"Login berhasil",
                "data": {
                  "id": "qyO9_BgMqNpb45Y3g1S-o",
                  "name": "Ahmad Ibrahim",
                  "email": "a.ibrahim@example.com",
                  "token": "token akan muncul disini"
                }
              }
  /poll/create:
   post:
    security:
      - AuthToken: []
    tags:
      - Poll Website
    summary: membuat website polling
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/poll'
    responses:
      '201':
        description: Created
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Polling berhasil dibuat!",
                "data": "https://poll-dot-hayuk-project.et.r.appspot.com/poll/${poll_id}"
              }
      '400':
        description: Bad Request
  /user:
   get:
    security:
      - AuthToken: []
    tags:
      - Manajemen Pengguna
    summary: Daftar akun pengguna
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Daftar user berhasil didapatkan",
                "data": {
                  "id": "qyO9_BgMqNpb45Y3g1S-o",
                  "name": "Ahmad Ibrahim",
                  "email": "a.ibrahim@example.com",
                  "createdAt": "2023-03-17T11:04:09.588Z",
                  "updatedAt": "2023-03-17T11:04:09.588Z"
                }
              }
      '400':
        description: Bad Request
  /user/{id}:
   get:
    security:
      - AuthToken: []
    tags:
      - Manajemen Pengguna
    summary: Melihat detail pengguna berdasarkan ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID dari user
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Data pengguna berhasil didapatkan",
                "data": {
                  "id": "qyO9_BgMqNpb45Y3g1S-o",
                  "name": "Ahmad Ibrahim",
                  "email": "a.ibrahim@example.com",
                  "createdAt": "2023-03-17T11:04:09.588Z",
                  "updatedAt": "2023-03-17T11:04:09.588Z"
                }
              }
      '404':
        description: User not found 
   patch:
    security:
      - AuthToken: []
    tags:
      - Manajemen Pengguna
    summary: Memperbarui detail pengguna berdasarkan ID
    description: Bisa memperbaharui salah satu data saja atau ketiga data sekaligus, data akan tetap    divalidasi ada minimum panjang nama, email dan password, serta pengecekan apakah email sudah    digunakan user lain atau belum
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/register'
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID dari pengguna
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Data pengguna berhasil diupdate",
              }
      '404':
        description: User not found 
   delete:
    security:
      - AuthToken: []
    tags:
      - Manajemen Pengguna
    summary: Menghapus User berdasarkan ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID dari user
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "success": "success",
                "message": "User berhasil dihapus"
              }
      '404':
        description: User not found    
   post:
    security:
      - AuthToken: []
    tags:
      - Manajemen Pengguna
    summary: Upload foto profil pengguna ke google cloud storage (png/jpg) dan ukuran tidak lebih dari   5 MB, respon yang didapat adalah link dari foto profil pengguna
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID dari user
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/uploadProfile'
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": 'Data tempat favorit berhasil didapatkan',
                "data": {
                  "photoURL": "https://storage.googleapis.com/hayuk-storage-profile-photo  /CAwo3o1RuwWJrM4eK3lVt%2FCAwo3o1RuwWJrM4eK3lVt-2023-06-01T11%3A21%3A47.342Z  -current.jpg"
                }
              }
      '404':
        description: User not found
  /user/{id}/polls:
   get:
    security:
      - AuthToken: []
    tags:
      - Manajemen Pengguna
    summary: Daftar polling yang dibuat pengguna
    parameters:
       - in: path
         name: id
         required: true
         schema:
           type: string
         description: ID dari user
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Daftar polling berhasil didapatkan",
                "data": [
                    {
                         "poll_id": "ArNXCeVrNe4880pmfanO",
                         "photo_url": "https://maps.googleapis.com/maps/api/place/photo?maxheight =480&photoreference=AZose0lnvxUdwxm26Op4zKijrcDe9-EAUmBnsKBcYw -2GKRZHZj9QvqHNsZjaREF_6bUNzBHMp4t_w39JkoTSJi39yjJtuyHImrFD3EVcdG4q3EAWBjb fdvG0msDLG0tqdvm-Qr6mjzHi5M7aL64feLiWINlviP1MrwbB7FOBjHVGD7BYujW&sensor =false&key=AIzaSyClh1AGWGGuXQM38uvxoxwjvdRNNP3h0mo",
                         "place_name": "Starbucks Coffee Empire XXI",
                         "place_rating": "4.6",
                         "place_total_review": "1280"
                     },
                     {
                         "poll_id": "ExqryD-W1qRmNg4MPtxI",
                         "photo_url": "https://maps.googleapis.com/maps/api/place/photo?maxheight =480&photoreference=AZose0k-BOfpwHuRsMNO4x48wJTQ1I_TmZyay08VWwW6u5zsC -Z48NvKKRlRyVFQ5xg9p177Ikm2LoXIJocKj9idhRNS6Caxy1M1ytJovtbtnCXPGipk4c -SieJpmfcIy94xQPwoNZPYbx27AM3zpa6AdKsT9VBZ-DZzbcXaDVRW3L0T3ge1&sensor =false&key=AIzaSyClh1AGWGGuXQM38uvxoxwjvdRNNP3h0mo",
                         "place_name": "Bliss Pool and Lounge",
                         "place_rating": "4.6",
                         "place_total_review": "1318"
                     }
                ]
              }
      '400':
        description: Bad Request
   delete:
    security:
      - AuthToken: []
    tags:
      - Manajemen Pengguna
    summary: Hapus polling yang dibuat pengguna
    requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pollDelete'
    parameters:
       - in: path
         name: id
         required: true
         schema:
           type: string
         description: ID dari user
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Polling berhasil dihapus",
              }
      '400':
        description: Bad Request
  /places/{location}:
   get:
    security:
      - AuthToken: []
    tags:
      - Data Tempat
    summary: Mendapatkan data top 10 tempat dari ML endpoint dengan masukan lokasi pengguna
    parameters:
      - in: path
        name: location
        required: true
        schema:
          type: string
        description: masukan lokasi dengann format latitude,longitude
        example: -7.761028,110.378478
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": 'Daftar berhasil didapatkan',
                "data": [
                    {
                        "id": "ChIJ16Xs67JZei4RpgV1otKBiO4",
                        "photo": "https://maps.googleapis.com/maps/api/place/photo?maxwidth =400&photoreference =AZose0l6PTFlYOkxb67QiMSTWeLA9lXG2y_gUQZ0Ye8uzeXX5Hj_cFry_C2UAcixuaS7IzNy6w lk5-JBxOApynVJPYRATqavxJSvEiMM1cEBdku3tWDEaR -CDSqXE3KTzQbWGWK8e3jCjsqQEHlmAe6Sx5TELMlD8OQQEWGSnjZmpoawscuJ&sensor =false&key=AIzaSyClh1AGWGGuXQM38uvxoxwjvdRNNP3h0mo",
                        "name": "Gudeg Yu Narni Pusat Mbarek",
                        "category": "restaurant",
                        "rating": 4.5,
                        "totalReview": 373,
                        "latitude": -7.765867200000001,
                        "longitude": 110.3804744
                    }
                 ]
            }
      '400':
        description: Bad Request
  /places/details/{placeId}:
   get:
    security:
      - AuthToken: []
    tags:
      - Data Tempat
    summary: Data detail dari suatu tempat berdasarkan dengan masukan path parameter place id
    parameters:
      - in: path
        name: placeId
        required: true
        schema:
          type: string
        description: masukan place id
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Detail tempat berhasil didapatkan",
                "data": [
                    {
                        "id": "ChIJ16Xs67JZei4RpgV1otKBiO4",
                        "photo": "https://maps.googleapis.com/maps/api/place/photo?maxwidth  =400&photoreference  =AZose0l6PTFlYOkxb67QiMSTWeLA9lXG2y_gUQZ0Ye8uzeXX5Hj_cFry_C2UAcixuaS7IzNy6wl  k5-JBxOApynVJPYRATqavxJSvEiMM1cEBdku3tWDEaR  -CDSqXE3KTzQbWGWK8e3jCjsqQEHlmAe6Sx5TELMlD8OQQEWGSnjZmpoawscuJ&sensor  =false&key=AIzaSyClh1AGWGGuXQM38uvxoxwjvdRNNP3h0mo",
                        "name": "Gudeg Yu Narni Pusat Mbarek",
                        "category": "restaurant",
                        "address": "Gg. Cokrowolo, Kocoran, Caturtunggal, Kec. Depok, Kabupaten Sleman  , Daerah Istimewa Yogyakarta 55281, Indonesia",
                        "rating": 4.5,
                        "totalReview": 373,
                        "about": null,
                        "review": [
                            {
                                "id": "0",
                                "author": "Mutia Tiara",
                                "rating": 5,
                                "text": "Deket banget sama lokasi penginapan, makan siang di sini emm   sedap! Tidak kemanisan, pedesnya anget anget banget, enak!\n\nBisa   beli untuk oleh-oleh juga lo! Enak asli",
                                "time": "9 bulan lalu"
                            },
                            {
                                "id": "1",
                                "author": "Rifki Kurniawan",
                                "rating": 5,
                                "text": "Menurut saya ini Gudeg yg enak dan pas di lidah sunda saya.   Apalagi kreceknya, harga pun terjangkau dibanding gudeg lainnya.",
                                "time": "3 bulan lalu"
                            },
                            {
                                "id": "2",
                                "author": "Blogger Kuliner",
                                "rating": 3,
                                "text": "Krecek keras, gudeg areh terlalu manis.. order tepong (paha   atas) juga ayam terlalu keras dan hambar. Pertama nyoba dan terakhir  .",
                                "time": "2 minggu yang lalu"
                            },
                            {
                                "id": "3",
                                "author": "Kumvid Niken",
                                "rating": 4,
                                "text": "Warung rmh bersih semebelnya,menurut saya: rasa gudegnya   konsisten pas manisnya pas kematangannya(ga kering ga nyemek) ini   semua yg sy suka dari gudeg Yu Narni, tehrasa pas juga   manisnya👍👍👍✅❤",
                                "time": "dalam minggu terakhir"
                            },
                            {
                                "id": "4",
                                "author": "Rini Panggabean",
                                "rating": 5,
                                "text": "So far buat aku ini resto Gudeg paling enak krn gak terlalu   manis tapi bumbu ya meresap banget ke ayam. Uenak tenan.  Harga 1   porsi lengkap 39 k kalo gak salah. Standarlah.",
                                "time": "3 tahun lalu"
                            }
                        ],
                        "phone": "0878-3870-3999",
                        "website": null,
                        "latitude": -7.765867200000001,
                        "longitude": 110.3804744,
                        "mapsURL": "https://www.google.com/maps/search/?api=1&query=-7  .765867200000001%2C110.3804744&query_place_id=ChIJua4VyY_maC4RNovv6zj97e0"
                    }
                 ]
            }
      '400':
        description: Bad Request
  /recommend/{loc_user}:
   get:
    tags:
      - Recommender Endpoint
    summary: Daftar akun pengguna
    parameters:
      - in: path
        name: loc_user
        required: true
        schema:
          type: string
        description: Koordinat lokasi user
        example: -7.761028,110.378478
    responses:
      '200':
        description: Success
        content:
          application/json:
            example:
              {
                "status": "success",
                "message": "Daftar user berhasil didapatkan",
                "data": {
                  "id": "qyO9_BgMqNpb45Y3g1S-o",
                  "name": "Ahmad Ibrahim",
                  "email": "a.ibrahim@example.com",
                  "createdAt": "2023-03-17T11:04:09.588Z",
                  "updatedAt": "2023-03-17T11:04:09.588Z"
                }
              }
      '400':
        description: Bad Request
components:
  schemas:
    login:
      type: object
      properties:
        email:
          type: string
          example: a.ibrahim@example.com
        password:
          type: string
          example: 12345678
    register:
      type: object
      properties:
        name:
          type: string
          example: Ahmad Rifai
        email:
          type: string
          example: a.rifai@example.com
        password:
          type: string
          example: 12345678
    uploadProfile:
      type: object
      properties:
        photoFile:
          type: string
          format: binary
    poll:
      type: object
      properties:
        placeId:
          type: string
          example: ChIJCYpAP2DmaC4RshB4KjZqULA
        userId:
          type: string
          example: CAwo3o1RuwWJrM4eK3lVt
    pollDelete:
      type: object
      properties:
        pollId:
          type: string
          example: ChIJCYpAP2DmaC4RshB4KjZqULA
  securitySchemes:
    AuthToken:
      type: apiKey
      name: auth-token
      in: header